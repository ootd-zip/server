spring:
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        show-sql: false # 로그로 sql 구문을 출력하므로 사용안함
        format_sql: true # sql 보기 편하게 출력
        jdbc:
          batch_size: 100 # update문 하이버네이트 배치를 사용하기 위해 추가, (Insert는 적용불가, id 생성방식이 Identity 이기 때문)
        order_updates: true
        dialect: org.hibernate.dialect.MariaDB103Dialect
  datasource:
    url: jdbc:mariadb://localhost:3306/ootdzip # mariaDB 쿼리로그가 보고싶을시 ?&profileSQL=true&maxQuerySizeToLog=0
    username: ootdzip
    password: 1234
    driver-class-name: org.mariadb.jdbc.Driver
  data:
    redis:
      host: 127.0.0.1
      port: 6379
      timeout: 10

  security:
    oauth2:
      client:
        registration:
          apple:
            redirect-uri: ${client.base-url}/sign-in/apple/callback
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            scope:
              - openid
          kakao:
            redirect-uri: ${client.base-url}/sign-in/kakao/callback
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope:
          naver:
            redirect-uri: ${client.base-url}/sign-in/naver/callback
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope:
          dev:
            provider: kakao
            redirect-uri: ${client.dev-url}/sign-in/dev/callback
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope:
        provider:
          apple:
            authorization-uri: https://appleid.apple.com/auth/authorize
            token-uri: https://appleid.apple.com/auth/token
            jwk-set-uri: https://appleid.apple.com/auth/keys
            issuer-uri: https://appleid.apple.com
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-info-authentication-method: POST
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response/id

  profiles:
    include: secret
  servlet:
    multipart:
      max-file-size: 10MB # 파일 최대 사이즈 + 서비스단 별도 제한 10MB
      max-request-size: 10MB # 요청 당 최대 사이즈 + 서비스단 별도 제한 50MB

server:
  port: 8081
  tomcat:
    accesslog:
      enabled: true
      directory: logs
      suffix: .log
      prefix: access_log
      file-date-format: .yyyy-MM-dd
      pattern: "%{yyyy-MM-dd HH:mm:ss}t %s %r %{User-Agent}i %{Referer}i %a %b %D"

client:
  base-url: https://ootdzip.com
  dev-url: http://localhost:3000


logging: #로그 레벨을 정하는 것
  level:
    org.hibernate.SQL: off #JPA 하이버네이트가 생성하는 SQL 로그
    org.hibernate.orm.jdbc.bind: off # 스프링 3.0 이후 변경됨
    zip.ootd.ootdzip.oauth.OAuth2AuthenticationFailureHandler: debug # 로그인 실패 시 로그

# for swagger
springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    path: /swagger-ui
    disable-swagger-default-url: true
    display-request-duration: true
    tags-sorter: alpha
    operations-sorter: alpha
    doc-expansion: none
    syntax-highlight:
      theme: nord
    urls-primary-name: TEST API
    persist-authorization: true
    query-config-enabled: true
  pre-loading-enabled: true

# Token config
authorization:
  issuer: https://ootdzip.com
  audience: https://ootdzip.com
  access-token-time-to-live: 1800  # 30 minutes
  refresh-token-time-to-live: 5184000  # 60 days
